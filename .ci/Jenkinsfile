#!/usr/bin/env groovy

node {
withEnv(
    [
    'ftp_proxy=ftp://proxy.kip.uni-heidelberg.de:2121',
    'http_proxy=http://proxy.kip.uni-heidelberg.de:8080',
    'https_proxy=http://proxy.kip.uni-heidelberg.de:8080',
    'no_proxy=localhost,kip,kip.uni-heidelberg.de,129.206.179.*,129.20'
    ]
){
    LIVE_INSTANCE="/wang/environment/software/jessie/spack/${GERRIT_BRANCH}_live"
    STAGE_INSTANCE="/wang/environment/software/jessie/spack/${GERRIT_BRANCH}_staging"
    COMPILER="gcc@7.2.0 %gcc"
    PY2="python@2.7.14"
    PY3="python@3.6.3"

    if (GERRIT_EVENT_TYPE=="change-merged") {
        WORKING_DIR=LIVE_INSTANCE
    } else {
        WORKING_DIR=STAGE_INSTANCE
    }

    dir(WORKING_DIR) {
        checkout scm
    }

   if (GERRIT_EVENT_TYPE!="change-merged") {
       stage('stack') {
           sh "cd ${WORKING_DIR} && " +
               "git clean -dfx && " +
               ". share/spack/setup-env.sh && " +
               "spack stack ${LIVE_INSTANCE}"
       }
   }
    stage('compiler') {
        sh "cd ${WORKING_DIR} && " +
            "set +x && " +
            ". share/spack/setup-env.sh && " +
            "set -x && " +
            "bash -x .ci/01_ensure_gcc.sh "
    }

    stage('dlsdemos') {
        sh "env && " +
            "cd ${WORKING_DIR} && " +
            "set +x && " +
            ". share/spack/setup-env.sh &&" +
            "set -x && " +
            "bash -ex .ci/02_install.sh dls_demos \'visionary-dls-demos ^${PY2}\' \'${COMPILER}\'"
    }

    stage('dlspy2') {
        sh "env && " +
            "cd ${WORKING_DIR} && " +
            "set +x && " +
            ". share/spack/setup-env.sh &&" +
            "set -x && " +
            "bash -ex .ci/02_install.sh dls_py2 \'visionary-defaults-dls ^${PY2}\' \'${COMPILER}\'"
    }

    stage('dlspy3') {
        sh "env && " +
            "cd ${WORKING_DIR} && " +
            "set +x && " +
            ". share/spack/setup-env.sh &&" +
            "set -x && " +
            "bash -ex .ci/02_install.sh dls_py3 \'visionary-defaults-dls ^${PY3}\' \'${COMPILER}\'"
    }

    stage('wafer') {
        sh "env && " +
            "cd ${WORKING_DIR} && " +
            "set +x && " +
            ". share/spack/setup-env.sh &&" +
            "set -x && " +
            "bash -ex .ci/02_install.sh wafer_wot_py2 \'visionary-defaults-wafer ~tensorflow ^${PY2}\' \'${COMPILER}\' && " +
            "bash -ex .ci/02_install.sh wafer_wt_py2 \'visionary-defaults-wafer ^${PY2}\' \'${COMPILER}\' 'local'"
    }

    stage('analysis_py2') {
        sh "env && " +
            "cd ${WORKING_DIR} && " +
            "set +x && " +
            ". share/spack/setup-env.sh &&" +
            "set -x && " +
            "bash -ex .ci/02_install.sh analysis_py2 \'visionary-defaults-analysis ^${PY2}\' \'${COMPILER}\'"
    }

    stage('analysis_py3') {
        sh "env && " +
            "cd ${WORKING_DIR} && " +
            "set +x && " +
            ". share/spack/setup-env.sh &&" +
            "set -x && " +
            "bash -ex .ci/02_install.sh analysis_py3 \'visionary-defaults-analysis ^${PY3}\' \'${COMPILER}\'"
    }

    stage('simulation_py2') {
        sh "env && " +
            "cd ${WORKING_DIR} && " +
            "set +x && " +
            ". share/spack/setup-env.sh &&" +
            "set -x && " +
            "bash -ex .ci/02_install.sh simulation_py2 \'visionary-defaults-simulation ^${PY2}\' \'${COMPILER}\'"
    }

}
}
